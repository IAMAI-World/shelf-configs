spring.servlet.multipart.max-file-size: 1000MB
spring.servlet.multipart.max-request-size: 1000MB
spring.cloud.gateway.httpclient.codec.multipart.enabled: true
spring.cloud.gateway.httpclient.max-request-size: 1000MB
server:
  forward-headers-strategy: framework
spring:
  main:
    allow-bean-definition-overriding: true
  data.rest.base-path: api/v1
  datasource:
    url: jdbc:postgresql://localhost:5432/shelf-product?ssl=false
    username: user
    password: password
  jpa:
    properties:
      hibernate:
        generate_statistics: true
        cache:
          use_second_level_cache: true
          region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
          queries: true
          ehcache:
            missing_cache_strategy: create
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
  mail:
    smtp:
      timeout: 60000
    host: smtp.mandrillapp.com
    port: 587
    username: IAMAI
    password: '{cipher}6291ca54ce60a94f45cb736e4e4deb6927279f379072a0d16f79f1f66eb1ab2f3bc2c25f51ddb0802e9c90e9027a2c35'
    admin: gladiypavlo@gmail.com
    base-link: https://dashboard.iamaiworld.ai/user/
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  cloud:
    gateway:
      httpclient:
        codec:
          multipart:
            enabled: true
management:
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    mail:
      enabled: false
springdoc.api-docs.path: /api/v1/profiles/api-doc
logging:
  level:
    com.agenatech: DEBUG
health:
  config:
    enabled: false

server.servlet.encoding.charset: UTF-8
server.servlet.encoding.force-response: true
web.base-url: https://dashboard-dev.iamaiworld.ai/
api.base-url: https://api-dashboard-dev.iamaiworld.ai/api/v1
fileClient.url: https://api-dashboard-dev.iamaiworld.ai
keycloak-client:
  server-url: https://auth-dashboard-dev.iamaiworld.ai/auth
  realm: dashboard
aws.accessKey: '{cipher}49ff9515bae71d0606ded65bbc8151fc22537eb3b6074e2ea535913aa0b8ca0f799e691668ac1b41cb752a99d9ba557d'
aws.secretKey: '{cipher}bf90b6127ae911113f1285fed824ba30c3a0f493982a996104d3a8b350aad0fe9ccbe7cf6089391090e6f1c48b97a53a0b2ba0479e427d279a863a04e97ec1ef'
openai.Key: '{cipher}9ef35231e0ebdfda014311061e689fc648a2d8670d4e04bcf8fdb4263a532626234db68da2bfda86335d3f065abcc941e6e067a8d0dcbd7e70830f78fc43a77b3ed70681def4523a4c10471f094b4831'
stripe.Key: '{cipher}61705bd104f9cadc2996970b8e3f782fc4ceaf0046e16fbd10ed56cae8b7bf3fb7e4bb102920e123f93f0ccfca4bda0c801ece328d581961a30dc00ad0a312cf1503d2fb7f581e79ccb922a67293a317fe8a6b58b618ec7542ee7ce42b98d71d258f6d865c64bc9c7b7306d3456a63bd15ed3c4490db5d1f2e82a411d4891bf0'
stripe.Product: '{cipher}d6b3f830001faf51ae7bc651cb489c4868400b1c81a36cc936079de450828609fa236a783f6d75a4e1ad0b96adfdd780'
stripe.fixedPrice: '{cipher}1cce991adfe6d852b2ab05053e30a5a8bb4adb7753df7bf514e8f02ec20a0135fac5d634fc600cf48ebf3164ed5dba67'
stripe.userPrice: '{cipher}49ac3bf39a86755bc5ec0abf41902469a36de7c84c1a5fa3a1338f50fb7859122363c58a5cd677b019efb2899fc6d501'